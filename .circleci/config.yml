version: 2.1

orbs:
    slack: circleci/slack@3.4.2
    python: circleci/python@0.2.1

jobs:
    build:
        executor: python/default
        steps:
            - checkout
            - python/load-cache
            - python/install-deps
            - python/save-cache
            - run:
                  name: Install ApiKey file
                  command: echo $MongoDB_Connection_String > apiKey.json
            - persist_to_workspace:
                  root: .
                  paths:
                      - apiKey.json
                      - requirements.txt
                      - checksession.py
                      - date.py
                      - db.py
                      - main.py
                      - app.yaml
    deploy:
        docker:
            - image: google/cloud-sdk
        steps:
            - attach_workspace:
                  at: .
            - run:
                  name: Setup gcloud env
                  command: |
                      echo $GCP_KEY > gcloud-service-key.json
                      gcloud auth activate-service-account --key-file=gcloud-service-key.json
                      gcloud --quiet config set project ${GCP_PROJECT_ID}
                      gcloud --quiet config set compute/zone ${GCP_REGION}
            - run:
                  name: Deploy to App Engine
                  command: gcloud app deploy
                  no_output_timeout: 30m
            - slack/status:
                  fail_only: false
                  mentions: "U0138PGJF4G"
                  only_for_branches: master
                  webhook: ${SLACK_WEBHOOK}

workflows:
    version: 2
    build-deploy:
        jobs:
            - slack/approval-notification:
                  message: (Workflow \#$CIRCLE_BUILD_NUM) New Reco flask backend is starting building now.
                  webhook: ${SLACK_WEBHOOK}
            - build
            - slack/approval-notification:
                  message: (Workflow \#$CIRCLE_BUILD_NUM) New Reco flask backend has built successfully, deploying to Google Cloud App Engine.
                  webhook: ${SLACK_WEBHOOK}
            - deploy:
                  requires:
                      - build
                  filters:
                      branches:
                          only: master
            - slack/status:
                  fail_only: false
                  mentions: ""
                  only_for_branches: master
                  webhook: ${SLACK_WEBHOOK}
